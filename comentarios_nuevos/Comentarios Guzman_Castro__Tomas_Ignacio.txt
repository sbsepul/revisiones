Alumno: Guzman_Castro__Tomas_Ignacio
Nota: 5.2


================================================================================
(1) Funcionalidad: 1.3 / 1.5

(1.1) Unidades muertas pueden atacar: -0.1x1 = -0.1
Detalle: No hay test
	 

(1.2) Se puede atacar unidades muertas: -0.1x1 = -0.1
Detalle: No hay test
	 

================================================================================
(2) Diseño: 1.8 / 2.5

(2.1) No utiliza double dispatch para decidir la cantidad de estrellas/victorias en caso de ganar un combate: -0.8x0.5 = -0.4
Detalle: No hace DD al decidir la cantidad de victorias en caso de
	 ganar un combate

(2.2) Enemigos no comparten una interfaz o clase abstracta común (sepadara de player): -0.3x1 = -0.3
Detalle: No aplica
	 

================================================================================
(3) Código Fuente: 3.1 / 4

================================================================================
(4) Coverage: 1 / 1

================================================================================
(5) Javadoc: 0 / 0.5

(5.1) Error de documentación (ponderar por cantidad): -0.05x10 = -0.5
Detalle: Documentacion deben ir primero en la interfaz y luego se
	 replica en las subclases que la implementan

================================================================================
(6) Resumen: 0 / 0.5

(6.1) Falta readme: -0.5x1 = -0.5
Detalle: Favor, en la proxima entrega ser más explicito en el README.
	 Es la mejor manera de saber si se entendió el trabajo y
	 empezar a revisar el código, con la idea de qué hace cada
	 método. Te faltó explicar cómo implementaste el Double
	 Dispatch, el ataque, la defensa y la evasión. Piensa que el
	 README lo lee un compañere tuyo para comenzar desde donde tú
	 quedaste

================================================================================
Adicionales: 0.1
================================================================================

(6.2) Cumple con entregas parciales (se pondera por la cantidad realizada, en caso de haber realizado las 3 se pondera por 4): 0.1x1 = 0.1
Detalle: No aplica
	 

Comentarios: nan
Corrector: nan